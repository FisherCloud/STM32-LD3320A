#ifndef __AT_H
#define __AT_H

#include "stm32f10x.h"

#define AT_8_NUM        7    //8字节命令数量
#define AT_9_NUM        14   //9字节命令数量


extern char    ALED_STA[];

#ifdef  __AT_LOCAL__
//AT指令集
u8 AT_Num_8u[AT_8_NUM][8] =  // 8字节命令
{
    {'A', 'T', '+', 'L', 'E', 'D', '1', '?'}, //查询LED0状态  设置该指令指令编码 1000
    {'A', 'T', '+', 'L', 'E', 'D', '2', '?'}, //查询LED1状态  设置该指令指令编码 1001
    {'A', 'T', '+', 'L', 'E', 'D', '3', '?'}, //查询LED2状态  设置该指令指令编码 1002
    {'A', 'T', '+', 'A', 'L', 'E', 'D', '?'}, //查询3个LED状态设置该指令指令编码 1003
    {'A', 'T', '+', 'J', 'D', 'Q', '1', '?'}, //查询继电器状态  设置该指令指令编码 1004
    {'A', 'T', '+', 'F', 'M', 'Q', '1', '?'}, //查询蜂鸣器状态  设置该指令指令编码 1005
    {'A', 'T', '+', 'T', 'E', 'M', 'P', '?'}, //查询当前温度  设置该指令指令编码 1006
};
u8 AT_Num_9u[AT_9_NUM][9] =  // 9字节命令
{
    {'A', 'T', '+', 'L', 'E', 'D', '1', '=', '1'}, //打开LED0   设置该指令指令编码 1100
    {'A', 'T', '+', 'L', 'E', 'D', '1', '=', '0'}, //关闭LED0   设置该指令指令编码 1101
	
	{'A', 'T', '+', 'L', 'E', 'D', '2', '=', '1'}, //打开LED1   设置该指令指令编码 1102
    {'A', 'T', '+', 'L', 'E', 'D', '2', '=', '0'}, //关闭LED1   设置该指令指令编码 1103
	
    {'A', 'T', '+', 'L', 'E', 'D', '3', '=', '1'}, //打开LED2   设置该指令指令编码 1104
    {'A', 'T', '+', 'L', 'E', 'D', '3', '=', '0'}, //关闭LED2   设置该指令指令编码 1105

    {'A', 'T', '+', 'A', 'L', 'E', 'D', '=', '1'}, //打开所有   设置该指令指令编码 1106
    {'A', 'T', '+', 'A', 'L', 'E', 'D', '=', '0'}, //关闭所有   设置该指令指令编码 1107

    {'A', 'T', '+', 'A', 'L', 'S', 'D', '=', '1'}, //流水灯   设置该指令指令编码 1108
    {'A', 'T', '+', 'A', 'S', 'S', 'D', '=', '0'}, //闪烁     设置该指令指令编码 1109

    {'A', 'T', '+', 'J', 'D', 'Q', '1', '=', '1'}, //打开继电器   设置该指令指令编码 1110
    {'A', 'T', '+', 'J', 'D', 'Q', '1', '=', '0'}, //关闭继电器   设置该指令指令编码 1111

    {'A', 'T', '+', 'F', 'M', 'Q', '1', '=', '1'}, //打开蜂鸣器   设置该指令指令编码 1112
    {'A', 'T', '+', 'F', 'M', 'Q', '1', '=', '0'}, //关闭蜂鸣器   设置该指令指令编码 1113
};
#endif

void AT_Deal(u8 *cmd, u16 len);//处理AT指令函数
void AT_DO(u16 AT_Code);       //执行AT指令函数

#endif











